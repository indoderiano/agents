{"version":3,"sources":["logo.svg","Agent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","menu","API_URL","AgentSystem","state","userData","modal","editid","name","country","email","mobile","status","loading","deleteid","deleteloading","modeadd","componentDidMount","Axios","get","then","res","console","log","data","setState","catch","err","addAgentData","post","finally","deleteAgentData","put","updateAgentData","update","renderData","map","val","index","Table","Row","key","Cell","Button","onClick","agents_id","color","style","position","Dimmer","active","inverted","Loader","size","width","Icon","backgroundColor","padding","height","Grid","Column","borderRadius","textAlign","display","cursor","marginLeft","float","backgroundImage","backgroundSize","backgroundPosition","marginRight","Dropdown","text","Menu","Item","marginTop","striped","Header","HeaderCell","Body","this","Modal","open","onClose","onOpen","Content","marginBottom","Input","placeholder","value","onChange","e","target","Checkbox","toggle","checked","Actions","Component","App","Agent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7f94a00a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { Grid, Dropdown, Table, Button, Modal, Image, Header, Input, Checkbox, Dimmer, Loader, Icon } from 'semantic-ui-react'\r\nimport Axios from 'axios'\r\n\r\n\r\nconst menu=['Balance (e-money)','Set Price','Admin Management','Commision','Fee Management','History','Loan','Repayment','Log Out']\r\nconst API_URL='http://localhost:5000'\r\n\r\nclass AgentSystem extends Component {\r\n    state = { \r\n        userData:[],\r\n        modal:false,\r\n\r\n        editid:-1,\r\n        name:'',\r\n        country:'',\r\n        email:'',\r\n        mobile:'',\r\n        status:false,\r\n        loading:false,\r\n\r\n        deleteid:-1,\r\n        deleteloading:false,\r\n\r\n        modeadd:false\r\n     }\r\n\r\n    componentDidMount=()=>{\r\n        Axios.get(`${API_URL}/agents`)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            this.setState({userData:res.data})\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    addAgentData=()=>{\r\n        this.setState({loading:true})\r\n\r\n        var data={\r\n            name:this.state.name,\r\n            country:this.state.country,\r\n            email:this.state.email,\r\n            mobile:this.state.mobile,\r\n            status:this.state.status\r\n        }\r\n\r\n        Axios.post(`${API_URL}/agents`,data)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            this.setState({userData:res.data})\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        }).finally(()=>{\r\n            this.setState({loading:false,modal:false,modeadd:false})\r\n        })\r\n    }\r\n\r\n    deleteAgentData=()=>{\r\n        this.setState({deleteloading:true})\r\n\r\n        var update={\r\n            name:this.state.name,\r\n            country:this.state.country,\r\n            email:this.state.email,\r\n            mobile:this.state.mobile,\r\n            status:this.state.status\r\n        }\r\n\r\n        Axios.put(`${API_URL}/agents/delete/${this.state.deleteid}`)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            this.setState({userData:res.data})\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        }).finally(()=>{\r\n            this.setState({deleteloading:false,deleteid:-1})\r\n        })\r\n    }\r\n\r\n    updateAgentData=()=>{\r\n        this.setState({loading:true})\r\n\r\n        var update={\r\n            name:this.state.name,\r\n            country:this.state.country,\r\n            email:this.state.email,\r\n            mobile:this.state.mobile,\r\n            status:this.state.status\r\n        }\r\n\r\n        Axios.put(`${API_URL}/agents/${this.state.editid}`,update)\r\n        .then((res)=>{\r\n            console.log(res.data)\r\n            this.setState({userData:res.data})\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        }).finally(()=>{\r\n            this.setState({loading:false,modal:false,editid:-1})\r\n        })\r\n    }\r\n\r\n    renderData=()=>{\r\n        return this.state.userData.map((val,index)=>{\r\n            return (\r\n                <Table.Row key={index}>\r\n                    <Table.Cell>{index+1}</Table.Cell>\r\n                    <Table.Cell>{val.name}</Table.Cell>\r\n                    <Table.Cell>{val.country}</Table.Cell>\r\n                    <Table.Cell>{val.email}</Table.Cell>\r\n                    <Table.Cell>{val.mobile}</Table.Cell>\r\n                    <Table.Cell>{val.status?'Active':'Inactive'}</Table.Cell>\r\n                    <Table.Cell>\r\n                        <Button\r\n                            onClick={()=>{\r\n                                this.setState({\r\n                                    modal:true,\r\n                                    name:val.name,\r\n                                    country:val.country,\r\n                                    email:val.email,\r\n                                    mobile:val.mobile,\r\n                                    status:val.status?true:false,\r\n                                    editid:val.agents_id\r\n                                })\r\n                            }}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n\r\n                        {\r\n                            this.state.deleteid==val.agents_id?\r\n                            <Button\r\n                                color='red'\r\n                                style={{\r\n                                    position:'relative'\r\n                                }}\r\n                                onClick={this.deleteAgentData}\r\n                            >\r\n                                Confirm\r\n                                {\r\n                                    this.state.deleteloading?\r\n                                    <Dimmer active inverted>\r\n                                        <Loader inverted size='tiny'></Loader>\r\n                                    </Dimmer>\r\n                                    : null\r\n                                }\r\n                            </Button>\r\n                            :\r\n                            <Button\r\n                                style={{\r\n                                    width:'94px'\r\n                                }}\r\n                                onClick={()=>{\r\n                                    this.setState({deleteid:val.agents_id})\r\n                                }}\r\n                            >\r\n                                <Icon\r\n                                    name='trash'\r\n                                />\r\n                            </Button>\r\n                        }\r\n                        \r\n                    </Table.Cell>\r\n                </Table.Row>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n\r\n            <div\r\n                style={{\r\n                    backgroundColor:'black',\r\n                    padding:'0 2em',\r\n                    height:'100vh'\r\n                }}\r\n            >\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Grid.Column \r\n                            width={3}\r\n                            style={{\r\n                                padding:'3em'\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor:'white',\r\n                                    borderRadius:'15px'\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        padding:'2em',\r\n                                        textAlign:'center'\r\n                                    }}\r\n                                >\r\n                                    Agent System\r\n                                </div>\r\n                                {\r\n                                    menu.map((val,index)=>{\r\n                                        return (\r\n                                            <div\r\n                                                key={index}\r\n                                                style={{\r\n                                                    padding:'.7em 1em'\r\n                                                }}\r\n                                            >\r\n                                                {val}\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                        </Grid.Column>\r\n                        <Grid.Column \r\n                            width={13}\r\n                            style={{\r\n                                padding:'3em',\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor:'rgba(255,255,255,.1)',\r\n                                    borderRadius:'45px',\r\n                                    // overflow:'hidden',\r\n                                    padding:'1em'\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor:'white',\r\n                                        padding:'1em',\r\n                                        borderRadius:'25px',\r\n                                        display:'inline-block',\r\n                                        cursor:'pointer'\r\n                                    }}\r\n                                    onClick={()=>{\r\n                                        this.setState({\r\n                                            modal:true,\r\n                                            name:'',\r\n                                            country:'',\r\n                                            email:'',\r\n                                            mobile:'',\r\n                                            status:false,\r\n\r\n                                            modeadd:true\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    Add New\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{\r\n                                        display:'inline-block',\r\n                                        marginLeft:'auto',\r\n                                        float:'right',\r\n                                        color:'white',\r\n                                        // padding:'1em'\r\n                                    }}\r\n                                >\r\n                                    {/* <div\r\n                                        style={{\r\n                                            display:'inline-block',\r\n                                            height:'100%'\r\n                                        }}\r\n                                    >\r\n                                        \r\n                                    </div> */}\r\n\r\n                                    <div\r\n                                        style={{\r\n                                            display:'inline-block',\r\n                                            width:'50px',\r\n                                            height:'50px',\r\n                                            backgroundImage:'url(https://react.semantic-ui.com/images/avatar/large/matthew.png)',\r\n                                            backgroundSize:'cover',\r\n                                            backgroundPosition:'center',\r\n                                            borderRadius:'30px',\r\n                                            // overflow:'hidden'\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{\r\n                                        display:'inline-block',\r\n                                        float:'right',\r\n                                        backgroundColor:'rgba(255,255,255,.1)',\r\n                                        color:'white',\r\n                                        // width:'',\r\n                                        height:'50px',\r\n                                        marginRight:'2em',\r\n                                        borderRadius:'30px'\r\n                                    }}\r\n                                >   \r\n                                    <Dropdown text='English' style={{padding:'1em'}}>\r\n                                        <Dropdown.Menu>\r\n                                        <Dropdown.Item text='Bahasa' />\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop:'2em'\r\n                                }}\r\n                            >\r\n                            <Table striped>\r\n                                <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>#</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Country</Table.HeaderCell>\r\n                                    <Table.HeaderCell>E-mail</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Mobile</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Status</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Action</Table.HeaderCell>\r\n                                </Table.Row>\r\n                                </Table.Header>\r\n\r\n                                <Table.Body>\r\n                                    {this.renderData()}\r\n                                </Table.Body>\r\n                            </Table>\r\n                            </div>\r\n\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n\r\n\r\n                <Modal\r\n                    style={{\r\n                        width:'unset'\r\n                    }}\r\n                    open={this.state.modal}\r\n                    onClose={() => {this.setState({modal:false,editid:-1,modeadd:false})}}\r\n                    onOpen={() => {this.setState({modal:true})}}\r\n                    // trigger={<Button>Edit</Button>}\r\n                >\r\n                    <Modal.Header>Sub Agent</Modal.Header>\r\n                    <Modal.Content>\r\n\r\n                        <div\r\n                            style={{marginBottom:'1em'}}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display:'inline-block',\r\n                                    width:'150px'\r\n                                }}\r\n                            >\r\n                                Name\r\n                            </div>\r\n                            <Input\r\n                                placeholder='Name'\r\n                                style={{\r\n                                    marginLeft:'1em',\r\n                                    width:'200px'\r\n                                }}\r\n                                value={this.state.name}\r\n                                onChange={(e)=>{\r\n                                    this.setState({name:e.target.value})\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{marginBottom:'1em'}}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display:'inline-block',\r\n                                    width:'150px'\r\n                                }}\r\n                            >\r\n                                Country\r\n                            </div>\r\n                            <Input\r\n                                placeholder='Country'\r\n                                style={{\r\n                                    marginLeft:'1em',\r\n                                    width:'200px'\r\n                                }}\r\n                                value={this.state.country}\r\n                                onChange={(e)=>{\r\n                                    this.setState({country:e.target.value})\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{marginBottom:'1em'}}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display:'inline-block',\r\n                                    width:'150px'\r\n                                }}\r\n                            >\r\n                                Email\r\n                            </div>\r\n                            <Input\r\n                                placeholder='E-mail'\r\n                                style={{\r\n                                    marginLeft:'1em',\r\n                                    width:'200px'\r\n                                }}\r\n                                value={this.state.email}\r\n                                onChange={(e)=>{\r\n                                    this.setState({email:e.target.value})\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{marginBottom:'1em'}}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display:'inline-block',\r\n                                    width:'150px'\r\n                                }}\r\n                            >\r\n                                Mobile\r\n                            </div>\r\n                            <Input\r\n                                placeholder='Mobile'\r\n                                style={{\r\n                                    marginLeft:'1em',\r\n                                    width:'200px'\r\n                                }}\r\n                                value={this.state.mobile}\r\n                                onChange={(e)=>{\r\n                                    this.setState({mobile:e.target.value})\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{marginBottom:'1em'}}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display:'inline-block',\r\n                                    width:'150px'\r\n                                }}\r\n                            >\r\n                                Status\r\n                            </div>\r\n                            <Checkbox \r\n                                toggle \r\n                                style={{\r\n                                    marginLeft:'1em',\r\n                                    marginRight:'1em'\r\n                                }}\r\n                                checked={this.state.status}\r\n                                onChange={(e)=>{\r\n                                    this.setState({status:!this.state.status})\r\n                                }}\r\n                                // onClick={(e)=>{\r\n                                //     this.setState({status:e.target.checked})\r\n                                // }}\r\n                            />\r\n                            {\r\n                                this.state.status?\r\n                                'Active'\r\n                                :\r\n                                'Inactive'\r\n                            }\r\n                            {/* <Input\r\n                                type=''\r\n                                placeholder='test'\r\n                                style={{\r\n                                    marginLeft:'1em',\r\n                                    width:'200px'\r\n                                }}\r\n                                value={val.username}\r\n                                onChange={(e)=>{\r\n                                    this.setState({role:e.target.value})\r\n                                }}\r\n\r\n                            /> */}\r\n                        </div>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button color='black' >\r\n                            Nope\r\n                        </Button>\r\n                        {\r\n                            this.state.editid>0?\r\n                            <Button\r\n                            // labelPosition='right'\r\n                            // icon='checkmark'\r\n                            onClick={() => {\r\n                                this.updateAgentData()\r\n                            }}\r\n                            // positive\r\n                            >\r\n                                Save\r\n                                {\r\n                                    this.state.loading?\r\n                                    <Dimmer active inverted>\r\n                                        <Loader inverted>Loading</Loader>\r\n                                    </Dimmer>\r\n                                    : null\r\n                                }\r\n                            </Button>\r\n                            : null\r\n                        }\r\n                        {\r\n                            this.state.modeadd?\r\n                            <Button\r\n                            onClick={() => {\r\n                                this.addAgentData()\r\n                            }}\r\n                            >\r\n                                Add\r\n                                {\r\n                                    this.state.loading?\r\n                                    <Dimmer active inverted>\r\n                                        <Loader inverted>Loading</Loader>\r\n                                    </Dimmer>\r\n                                    : null\r\n                                }\r\n                            </Button>\r\n                            : null\r\n                        }\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AgentSystem;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport Agent from './Agent'\n\nfunction App() {\n  return (\n    <Agent/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}